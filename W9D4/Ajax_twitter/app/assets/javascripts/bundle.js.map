{"version":3,"sources":["./frontend/api_util.js","./frontend/follow_toggle.js","./frontend/user_search.js","webpack/bootstrap","./frontend/twitter.js"],"names":[],"mappings":";;;;;;;;;AAAA;;AAEA;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB;AACA,SAAS;AACT;;AAEA;AACA,yB;;;;;;;;;;AC5BA,gBAAgB,mBAAO,CAAC,0CAAY;;AAEpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,a;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,Y;;AAEA;AACA;;AAEA,6B;;;;;;;;;;ACtEA;AACA,gBAAgB,mBAAO,CAAC,0CAAY;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA,uBAAuB,kBAAkB;AACzC;AACA;AACA,gDAAgD,KAAK;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4B;;;;;;UCpCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;ACrBA,qBAAqB,mBAAO,CAAC,oDAAiB;AAC9C,mBAAmB,mBAAO,CAAC,gDAAe;;;AAG1C;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL,CAAC,C","file":"bundle.js","sourcesContent":["const APIUtil = {\n\n    followUser: id => {\n        return $.ajax({\n            url: `/users/${id}/follow`,\n            dataType: 'JSON',\n            method: 'POST',\n        })\n    },\n\n    unfollowUser: id => {\n        return $.ajax({\n            url: `/users/${id}/follow`,\n            dataType: 'JSON',\n            method: 'DELETE',\n        })\n    },\n\n    searchUsers: query => {\n        return $.ajax({\n            url: '/users/search',\n            dataType: 'JSON',\n            data: {query},\n            method: 'GET'\n        })\n    }\n    \n}\nmodule.exports = APIUtil;","const APIUtil = require(\"./api_util\");\n\nclass FollowToggle {\n    constructor(el, options){\n        this.el = $(el);\n        this.userId = this.el.data(\"user-id\") || options.userId;\n\n        this.followState = this.el.data(\"initial-follow-state\") || options.followState;\n        this.render();\n        //this.handleClick();\n        this.el.on(\"click\", this.handleClick.bind(this))\n    }\n\n    render(){\n        if (this.followState === \"followed\") {\n            this.el.prop('disabled', false);\n            this.el.html(\"Unfollow!\");\n        } else if (this.followState === \"unfollowed\") {\n            this.el.prop('disabled', false);\n            this.el.html(\"Follow!\");\n        } else if (this.followState === 'following') {\n            this.el.prop('disabled', true);\n            this.el.html(\"DON'T TOUCH\");\n        } else if (this.followState === 'unfollowing') {\n            this.el.prop('disabled', true);\n            this.el.html(\"DON'T TOUCH\");\n        }\n    }\n\n    handleClick(event) {\n        const toggled = this;\n        //this.el.on(\"click\", (event)=> {\n            event.preventDefault();\n            if (this.followState === \"followed\") {\n                this.followState = 'unfollowing';\n                this.render();\n                APIUtil.unfollowUser(this.userId).then(() => {\n                        toggled.followState = 'unfollowed';\n                        toggled.render();\n                    })\n            } else if (this.followState === \"unfollowed\") {\n                // debugger\n                this.followState = 'following';\n                this.render();\n                APIUtil.followUser(this.userId).then(() => {\n                        toggled.followState = 'followed'\n                        toggled.render();\n                    })\n            }  \n        //})\n        // event.preventDefault();\n        // if (this.followState === \"Follow!\") {\n        //     $.ajax({\n        //         url: '/users/:user_id/follow',\n        //         dataType: 'JSON',\n        //         method: 'DELETE',\n        //     })\n        //     .then(this.render())\n        // } else if (this.followState === \"Unfollow!\") {\n        //     $.ajax({\n        //         url: '/users/:user_id/follow',\n        //         dataType: 'JSON',\n        //         method: 'POST',\n        //     })\n        //     .then(this.render())\n        // }  \n        \n    }\n}\n\nmodule.exports = FollowToggle","// const FollowToggle = require(\"./follow_toggle\");\nconst APIUtil = require(\"./api_util\");\n\nclass UserSearch {\n    constructor(el){\n        this.el = $(el)\n        this.ul = $(\".users\")\n        this.input = $(\".user-input\")\n        console.log(this.input)\n        this.input.on('input', this.handleInput.bind(this))\n    }\n\n    handleInput(){\n        console.log('in handleInput');\n        const typed = this;\n        APIUtil.searchUsers(this.input.val()).then((users) => this.renderResults(users));\n    }\n\n    renderResults(users) {\n        this.ul.empty();\n\n\n        for (let i = 0; i < users.length; i++) {\n            const user = users[i];\n            console.log(user);\n            // let tag = $(`<a href='user_url(${user})'></a>`);\n            // let list = $(\"<li></li>\")\n            // // let button = $(\".follow-toggle\")\n            // // new FollowToggle(button)\n            // let tagged = list.append(tag);\n            // this.ul.append(tagged);\n\n        }\n    }\n}\n\nmodule.exports = UserSearch;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const FollowToggle = require(\"./follow_toggle\")\nconst UserSearch = require(\"./user_search\")\n\n\n$(() => {\n    $(\".follow-toggle\").each((index, button) => {\n        new FollowToggle(button);\n    })\n\n    $(\".users-search\").each((index, nav) => {\n        new UserSearch(nav);\n    })\n})"],"sourceRoot":""}